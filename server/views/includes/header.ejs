
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
<script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>

<link rel="stylesheet" href="/style.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<link rel="apple-touch-icon" sizes="180x180" href="/branding/fav/apple-touch-icon.png">
<link rel="icon" type="image/png" sizes="32x32" href="/branding/fav/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="16x16" href="/branding/fav/favicon-16x16.png">
<link rel="manifest" href="/branding/fav/site.webmanifest">
<link rel="mask-icon" href="/branding/fav/safari-pinned-tab.svg" color="#5bbad5">
<meta name="msapplication-TileColor" content="#da532c">
<meta name="theme-color" content="#ffffff">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

<script>
function showNotification(message, type = 'info', duration = 3000, callback = null) {
    let baseClass = 'notificationBar';
    let typeClass = `notification-${type}`;

    // Check if the notificationBar already exists, if not, create it
    let $notificationBar = $('#' + baseClass);
    if ($notificationBar.length === 0) {
        $notificationBar = $('<div></div>', {
            id: baseClass,
            class: baseClass
        }).appendTo('body');
    }

    // Update message and class based on the type
    $notificationBar.text(message).removeClass().addClass(baseClass + ' ' + typeClass).fadeIn(200);

    // Hide the notificationBar after 'duration' milliseconds and execute the callback if provided
    setTimeout(function () {
        $notificationBar.fadeOut(200, function () {
            if (typeof callback === 'function') {
                callback();
            }
        });
    }, duration);
}

</script>
