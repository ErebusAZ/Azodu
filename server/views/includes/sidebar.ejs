<div id="sidebar_container">
    <div class="sidebar">

        <button id="loginRegisterButton" class="sidebar_button">Login/Register</button>
        <div id="loginRegisterForm" class="lightbox" style="display: none;">
            <div class="lightbox-content">
                <h2 id="formTitle">Login</h2>
                <form id="authForm">
                    <input type="text" id="username" placeholder="Username" required>
                    <input type="password" id="password" placeholder="Password" required>
                    <input type="submit" id="submitAuth" value="Login">
                    <div id="formMessage" style="color: #d7dadc; margin-top: 10px;"></div> <!-- Message placeholder -->
                    <p id="switchAuthMode">Don't have an account? <a href="#" id="switchForm">Register here.</a></p>
                </form>
            </div>
        </div>


        <br />

        <a href="/submit-post" style="margin-bottom: 20px; display: block;"><button class="sidebar_button"
                type="button">Submit a post</button></a>

        <a href="/submit-category"><button class="sidebar_button" type="button">Submit a category</button></a>

        <!--
    <p style="margin-top:0;">Register an account</p>
    <form class="login-form">
        <input type="text" id="username" placeholder="username" required>
        <input type="password" id="password" placeholder="password" required>
        <input type="submit" value="Login">
    </form>
    <ul>
        <li class="earn-voc">Earn $VOC</li>
        <li class="censorship">Censorship resistant</li>
        <li class="bot-proof">Bot-proof</li>
    </ul>

-->


    </div>

    <div id="explore_sidebar">

        <div id="rights"><i class="fas fa-scroll"></i><span id="rights_span"><a href="#">Our Commitment</a></span>
        </div>
        <div id="rules"><i class="fas fa-gavel"></i><span id="rules_span"><a href="#">The Rules</a></span>
        </div>



        <h3 id="explore_heading">Spaces</h3>
        <ul class="community-links">


        </ul>
        <a href="#" class="show-more" id="showMoreBtn">Show more ...</a>

    </div>




</div>


<script>

    $(document).ready(function () {

        function fetchAndDisplayCategories() {
            $.ajax({
                url: '/api/categories',
                type: 'GET',
                success: function (categories) {
                    console.log(categories);
                    const $communityLinks = $('.community-links');
                    $communityLinks.empty(); // Clear existing categories
                    categories.forEach(function (category) {
                        // Assuming 'name' and 'permalink' are properties of the category
                        const categoryLink = `<li><a href="/c/${category.permalink}">/c/${category.permalink}</a></li>`;
                        $communityLinks.append(categoryLink);
                    });
                },
                error: function (error) {
                    console.error('Failed to fetch categories:', error);
                }
            });
        }

        fetchAndDisplayCategories();


        const loginRegisterButton = document.getElementById('loginRegisterButton');
        const loginRegisterForm = document.getElementById('loginRegisterForm');
        const formTitle = document.getElementById('formTitle');
        const submitAuthButton = document.getElementById('submitAuth');
        const switchAuthMode = document.getElementById('switchAuthMode');
        let isLoginMode = true;

        // Toggle form display
        loginRegisterButton.addEventListener('click', function () {
            loginRegisterForm.style.display = 'flex'; // Show the form
        });

        // Switch between login and registration
        document.addEventListener('click', function (e) {
            if (e.target.id === 'switchForm') {
                e.preventDefault();
                isLoginMode = !isLoginMode;
                updateFormMode();
            }
        });


        function handleFormSubmission(isLoginMode, username, password, email) {
            // Disable form elements to prevent multiple submissions
            document.getElementById('username').disabled = true;
            document.getElementById('password').disabled = true;
            const emailField = document.getElementById('email');
            if (emailField) emailField.disabled = true;
            document.getElementById('submitAuth').disabled = true;

            const actionUrl = isLoginMode ? '/api/login' : '/api/register';
            const payload = isLoginMode ? { username, password } : { username, password, email };
            const formMessage = document.getElementById('formMessage');

            fetch(actionUrl, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(payload)
            })
                .then(response => response.text())
                .then(data => {
                    formMessage.textContent = data; // Display success or error message
                    formMessage.style.color = 'limegreen'; // Success color

                    if (!isLoginMode || (isLoginMode && data.includes('successful'))) {
                        // Optionally close the form after a delay on success
                        setTimeout(() => { loginRegisterForm.style.display = 'none'; }, 3000);
                    } else {
                        // If login fails, do not close the form
                        // Re-enable form elements
                        document.getElementById('username').disabled = false;
                        document.getElementById('password').disabled = false;
                        if (emailField) emailField.disabled = false;
                        document.getElementById('submitAuth').disabled = false;
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    formMessage.textContent = 'An error occurred, please try again.'; // Display error message
                    formMessage.style.color = 'red'; // Error color

                    // Re-enable form elements on failure
                    document.getElementById('username').disabled = false;
                    document.getElementById('password').disabled = false;
                    if (emailField) emailField.disabled = false;
                    document.getElementById('submitAuth').disabled = false;
                });
        }




        // Handle form submission
        document.getElementById('authForm').addEventListener('submit', function (e) {
            e.preventDefault();
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;
            const email = document.getElementById('email') ? document.getElementById('email').value : '';
            console.log(username, password, isLoginMode);
            handleFormSubmission(isLoginMode, username, password, email);

        });

        // Close the form lightbox when clicking outside of it
        loginRegisterForm.addEventListener('click', function (e) {
            if (e.target === loginRegisterForm) {
                loginRegisterForm.style.display = 'none';
            }
        });

        function updateFormMode() {
            if (isLoginMode) {
                formTitle.textContent = 'Login';
                submitAuthButton.value = 'Login';
                switchAuthMode.innerHTML = 'Don\'t have an account? <a href="#" id="switchForm">Register here.</a>';
                document.getElementById('email')?.remove();
            } else {
                formTitle.textContent = 'Register';
                submitAuthButton.value = 'Register';
                switchAuthMode.innerHTML = 'Already have an account? <a href="#" id="switchForm">Login here.</a>';
                if (!document.getElementById('email')) {
                    const emailInput = document.createElement('input');
                    emailInput.type = 'email';
                    emailInput.id = 'email';
                    emailInput.placeholder = 'Email';
                    emailInput.required = true;
                    submitAuthButton.before(emailInput);
                }
            }
        }

        function loginUser(username, password) {
            fetch('/api/login', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ username, password })
            })
                .then(response => response.text()) // Handle as text
                .then(data => {
                    console.log('Login successful', data); // Data is now plain text
                    // Handle login success, e.g., storing the received token (if any) and redirecting
                })
                .catch(error => console.error('Error logging in:', error));
        }


        function registerUser(username, password, email) {
            fetch('/api/register', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ username, password, email })
            })
                .then(response => response.text()) // Handle as text
                .then(data => {
                    console.log('Registration successful', data); // Data is now plain text
                    // Handle success, e.g., showing a success message or redirecting
                })
                .catch(error => console.error('Error registering:', error));
        }

    });


</script>